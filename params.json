{"name":"kQuery","tagline":"A SQL interface to your Linux kernel","body":"kQuery\r\n======\r\n\r\nA SQL interface to your Linux kernel. Think of it like a Linux-only [osquery](http://osquery.io), but with fewer and less-robust tables (but we don't require vagrant or VMs, so we got that going for us, which is nice).\r\n\r\n## Building from Source\r\n1. First, we have to load the kernel module. Navigate to the `module` directory and execute the following commands:\r\n\r\n          $ make\r\n          $ sudo insmod kquery_mod.ko\r\n    \r\n  Alternatively, the scripts `load.sh` (and `unload.sh`) are provided for your convenience.\r\n    \r\n2. Next, we need to compile the user program:\r\n\r\n          $ gcc sqlite3.c kquery.c -o kquery -Wall -lpthread -ldl\r\n\r\n3. To run the shell, execute:\r\n        \r\n          $ sudo ./kquery\r\n\r\n## Current Features\r\n  * `.quit` to exit the shell\r\n  * The following tables:\r\n      * **Process**\r\n    \r\n          Column     | Type\r\n          ---------- | ----\r\n          pid        | INT PRIMARY KEY\r\n          name       | TEXT\r\n          parent_pid | INT\r\n          state      | BIGINT\r\n          flags      | BIGINT\r\n          priority   | INT\r\n          num_vmas   | INT\r\n          total_vm   | BIGINT\r\n\r\n## Future Features\r\n* Extra shell commands (`.tables`, `.schema`, etc.)\r\n* More tables\r\n\r\n## License\r\nkQuery is licensed under the [GNU General Public License, version 2](https://www.gnu.org/licenses/gpl-2.0.html).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}